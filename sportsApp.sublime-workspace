{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "test/spec/services/espn/sports.js",
			"settings":
			{
				"buffer_size": 892,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "(function(window, angular){\n  'use strict';\n  angular.module('espnAPIMocks').\n    value('espnIconstData', {});\n})(window, window.angular);",
			"file": "test/mock/espn/icon.js",
			"file_size": 286,
			"file_write_time": 130423592230000000,
			"settings":
			{
				"buffer_size": 138,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "describe(\"Service: icons\", function() {\n  describe(\".get()\", function() {\n    it(\"should behave...\", function() {\n      \n    });\n  });\n});",
			"file": "test/spec/services/espn/icons.js",
			"file_size": 0,
			"file_write_time": 130424022230000000,
			"settings":
			{
				"buffer_size": 138,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/espn/icons.js",
			"settings":
			{
				"buffer_size": 286,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/james/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
			"settings":
			{
				"buffer_size": 3255,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/james/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
			"settings":
			{
				"buffer_size": 53,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/controllers/category.js",
			"settings":
			{
				"buffer_size": 300,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/directives/logo.js",
			"settings":
			{
				"buffer_size": 945,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Generated on 2014-04-03 using generator-angular 0.7.1\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n  // Load grunt tasks automatically\n  require('load-grunt-tasks')(grunt);\n\n  // Time how long tasks take. Can help when optimizing build times\n  require('time-grunt')(grunt);\n\n  // Define the configuration for all the tasks\n  grunt.initConfig({\n\n    // Project settings\n    yeoman: {\n      // configurable paths\n      app: require('./bower.json').appPath || 'app',\n      dist: 'dist'\n    },\n\n    // Watches files for changes and runs tasks based on the changed files\n    watch: {\n      js: {\n        files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],\n        tasks: ['newer:jshint:all'],\n        options: {\n          livereload: true\n        }\n      },\n      jsTest: {\n        files: ['test/spec/{,*/}*.js'],\n        tasks: ['newer:jshint:test', 'karma']\n      },\n      compass: {\n        files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n        tasks: ['compass:server', 'autoprefixer']\n      },\n      gruntfile: {\n        files: ['Gruntfile.js']\n      },\n      livereload: {\n        options: {\n          livereload: '<%= connect.options.livereload %>'\n        },\n        files: [\n          '<%= yeoman.app %>/{,*/}*.html',\n          '.tmp/styles/{,*/}*.css',\n          '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n        ]\n      }\n    },\n\n    // The actual grunt server settings\n    connect: {\n      options: {\n        port: 9000,\n        // Change this to '0.0.0.0' to access the server from outside.\n        hostname: 'localhost',\n        livereload: 35729\n      },\n      livereload: {\n        options: {\n          open: true,\n          base: [\n            '.tmp',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      test: {\n        options: {\n          port: 9001,\n          base: [\n            '.tmp',\n            'test',\n            '<%= yeoman.app %>'\n          ]\n        }\n      },\n      dist: {\n        options: {\n          base: '<%= yeoman.dist %>'\n        }\n      }\n    },\n\n    // Make sure code styles are up to par and there are no obvious mistakes\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc',\n        reporter: require('jshint-stylish')\n      },\n      all: [\n        'Gruntfile.js',\n        '<%= yeoman.app %>/scripts/{,*/}*.js'\n      ],\n      test: {\n        options: {\n          jshintrc: 'test/.jshintrc'\n        },\n        src: ['test/spec/{,*/}*.js']\n      }\n    },\n\n    // Empties folders to start fresh\n    clean: {\n      dist: {\n        files: [{\n          dot: true,\n          src: [\n            '.tmp',\n            '<%= yeoman.dist %>/*',\n            '!<%= yeoman.dist %>/.git*'\n          ]\n        }]\n      },\n      server: '.tmp'\n    },\n\n    // Add vendor prefixed styles\n    autoprefixer: {\n      options: {\n        browsers: ['last 1 version']\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/styles/',\n          src: '{,*/}*.css',\n          dest: '.tmp/styles/'\n        }]\n      }\n    },\n\n    // Automatically inject Bower components into the app\n    'bower-install': {\n      app: {\n        html: '<%= yeoman.app %>/index.html',\n        ignorePath: '<%= yeoman.app %>/'\n      }\n    },\n\n\n\n\n    // Compiles Sass to CSS and generates necessary files if requested\n    compass: {\n      options: {\n        sassDir: '<%= yeoman.app %>/styles',\n        cssDir: '.tmp/styles',\n        generatedImagesDir: '.tmp/images/generated',\n        imagesDir: '<%= yeoman.app %>/images',\n        javascriptsDir: '<%= yeoman.app %>/scripts',\n        fontsDir: '<%= yeoman.app %>/styles/fonts',\n        importPath: '<%= yeoman.app %>/bower_components',\n        httpImagesPath: '/images',\n        httpGeneratedImagesPath: '/images/generated',\n        httpFontsPath: '/styles/fonts',\n        relativeAssets: false,\n        assetCacheBuster: false,\n        raw: 'Sass::Script::Number.precision = 10\\n'\n      },\n      dist: {\n        options: {\n          generatedImagesDir: '<%= yeoman.dist %>/images/generated'\n        }\n      },\n      server: {\n        options: {\n          debugInfo: true\n        }\n      }\n    },\n\n    // Renames files for browser caching purposes\n    rev: {\n      dist: {\n        files: {\n          src: [\n            '<%= yeoman.dist %>/scripts/{,*/}*.js',\n            '<%= yeoman.dist %>/styles/{,*/}*.css',\n            '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}',\n            '<%= yeoman.dist %>/styles/fonts/*'\n          ]\n        }\n      }\n    },\n\n    // Reads HTML for usemin blocks to enable smart builds that automatically\n    // concat, minify and revision files. Creates configurations in memory so\n    // additional tasks can operate on them\n    useminPrepare: {\n      html: '<%= yeoman.app %>/index.html',\n      options: {\n        dest: '<%= yeoman.dist %>'\n      }\n    },\n\n    // Performs rewrites based on rev and the useminPrepare configuration\n    usemin: {\n      html: ['<%= yeoman.dist %>/{,*/}*.html'],\n      css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n      options: {\n        assetsDirs: ['<%= yeoman.dist %>']\n      }\n    },\n\n    // The following *-min tasks produce minified files in the dist folder\n    imagemin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.{png,jpg,jpeg,gif}',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    svgmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.svg',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n    htmlmin: {\n      dist: {\n        options: {\n          collapseWhitespace: true,\n          collapseBooleanAttributes: true,\n          removeCommentsFromCDATA: true,\n          removeOptionalTags: true\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.dist %>',\n          src: ['*.html', 'views/{,*/}*.html'],\n          dest: '<%= yeoman.dist %>'\n        }]\n      }\n    },\n\n    // Allow the use of non-minsafe AngularJS files. Automatically makes it\n    // minsafe compatible so Uglify does not destroy the ng references\n    ngmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/concat/scripts',\n          src: '*.js',\n          dest: '.tmp/concat/scripts'\n        }]\n      }\n    },\n\n    // Replace Google CDN references\n    cdnify: {\n      dist: {\n        html: ['<%= yeoman.dist %>/*.html']\n      }\n    },\n\n    // Copies remaining files to places other tasks can use\n    copy: {\n      dist: {\n        files: [{\n          expand: true,\n          dot: true,\n          cwd: '<%= yeoman.app %>',\n          dest: '<%= yeoman.dist %>',\n          src: [\n            '*.{ico,png,txt}',\n            '.htaccess',\n            '*.html',\n            'views/{,*/}*.html',\n            'bower_components/**/*',\n            'images/{,*/}*.{webp}',\n            'fonts/*'\n          ]\n        }, {\n          expand: true,\n          cwd: '.tmp/images',\n          dest: '<%= yeoman.dist %>/images',\n          src: ['generated/*']\n        }]\n      },\n      styles: {\n        expand: true,\n        cwd: '<%= yeoman.app %>/styles',\n        dest: '.tmp/styles/',\n        src: '{,*/}*.css'\n      }\n    },\n\n    // Run some tasks in parallel to speed up the build process\n    concurrent: {\n      server: [\n        'compass:server'\n      ],\n      test: [\n        'compass'\n      ],\n      dist: [\n        'compass:dist',\n        'imagemin',\n        'svgmin'\n      ]\n    },\n\n    // By default, your `index.html`'s <!-- Usemin block --> will take care of\n    // minification. These next options are pre-configured if you do not wish\n    // to use the Usemin blocks.\n    // cssmin: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/styles/main.css': [\n    //         '.tmp/styles/{,*/}*.css',\n    //         '<%= yeoman.app %>/styles/{,*/}*.css'\n    //       ]\n    //     }\n    //   }\n    // },\n    // uglify: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/scripts/scripts.js': [\n    //         '<%= yeoman.dist %>/scripts/scripts.js'\n    //       ]\n    //     }\n    //   }\n    // },\n    // concat: {\n    //   dist: {}\n    // },\n\n    // Test settings\n    karma: {\n      unit: {\n        configFile: 'karma.conf.js',\n        singleRun: grunt.option('debug') ? false : true\n      }\n    }\n  });\n\n  grunt.registerTask('karma-debug', function (target) {\n\n  });\n\n  grunt.registerTask('serve', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'connect:dist:keepalive']);\n    }\n\n    grunt.task.run([\n      'clean:server',\n      'bower-install',\n      'concurrent:server',\n      'autoprefixer',\n      'connect:livereload',\n      'watch'\n    ]);\n  });\n\n  grunt.registerTask('test', [\n    'clean:server',\n    'concurrent:test',\n    'autoprefixer',\n    'connect:test',\n    'karma'\n  ]);\n\n  grunt.registerTask('build', [\n    'clean:dist',\n    'bower-install',\n    'useminPrepare',\n    'concurrent:dist',\n    'autoprefixer',\n    'concat',\n    'ngmin',\n    'copy:dist',\n    'cdnify',\n    'cssmin',\n    'uglify',\n    'rev',\n    'usemin',\n    'htmlmin'\n  ]);\n\n  grunt.registerTask('default', [\n    'newer:jshint',\n    'test',\n    'build'\n  ]);\n};\n",
			"file": "Gruntfile.js",
			"file_size": 9447,
			"file_write_time": 130418034110000000,
			"settings":
			{
				"buffer_size": 9447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sportsApp.sublime-project",
			"settings":
			{
				"buffer_size": 196,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"rebuil",
				"AngularJS: Rebuild Search Index"
			],
			[
				"grunt",
				"Grunt"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"repl",
				"Set Syntax: Io Repl"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"vie",
				"View Achievements"
			],
			[
				"ache",
				"View Achievements"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/james/Projects/github.com/sportsApp/.sublime-grunt.cache",
		"/Users/james/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/james/Projects/github.com/sportsApp/app/index.html",
		"/Users/james/Projects/github.com/sportsApp/app/scripts/services/espn/sports.js",
		"/Users/james/Projects/github.com/sportsApp/test/mock/espn/sports.js",
		"/Users/james/Projects/github.com/sportsApp/test/mock/espn/sport.js",
		"/Users/james/Projects/github.com/sportsApp/node_modules/grunt-contrib-uglify/test/fixtures/expected/sourcemap_prefix",
		"/Users/james/Projects/github.com/sportsApp/app/views/settings.html",
		"/Users/james/Projects/github.com/sportsApp/app/bower_components/es5-shim/tests/spec/s-object.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/spec/services/espn/sports.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 892,
						"regions":
						{
						},
						"selection":
						[
							[
								892,
								892
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test/mock/espn/icon.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 138,
						"regions":
						{
						},
						"selection":
						[
							[
								98,
								98
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test/spec/services/espn/icons.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 138,
						"regions":
						{
						},
						"selection":
						[
							[
								138,
								138
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/scripts/services/espn/icons.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 286,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/james/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3255,
						"regions":
						{
						},
						"selection":
						[
							[
								3101,
								3050
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 149.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/james/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/scripts/controllers/category.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 300,
						"regions":
						{
						},
						"selection":
						[
							[
								300,
								300
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"nodePath": "node",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/scripts/directives/logo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 945,
						"regions":
						{
						},
						"selection":
						[
							[
								728,
								728
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9447,
						"regions":
						{
						},
						"selection":
						[
							[
								1137,
								1137
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "sportsApp.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 196,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								103
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "sportsApp.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"grunt",
				"Gruntfile.js"
			],
			[
				"icon",
				"test/mock/espn/icon.js"
			],
			[
				"sports",
				"test/spec/services/espn/sports.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 295.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
